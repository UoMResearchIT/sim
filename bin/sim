#!/bin/bash

set -e
set -u

function sim_create()
{
    cores=1
    walltime="100:00:00:00"
    config=default
    input=

    while [ $# -gt 0 ]; do
        if [ $1 = "--cores" ]; then
            cores="$2"
            shift 2
        elif [ $1 = "--walltime" ]; then
            walltime="$2"
            shift 2
        elif [ $1 = "--input" ]; then
            input="$2"
            shift 2
        elif [ $1 = "--config" ]; then
            config="$2"
            shift 2
        elif [[ $1 =~ '-.*' ]]; then
            echo "Unrecognised option $1" >2
            exit 1
        else
            break
        fi
    done

    simdir=$1
    echo "Creating simulation $simdir"

    mkdir $simdir
    mkdir $simdir/code
    mkdir $simdir/meta

    # Git version information
    git describe --dirty >>${simdir}/meta/git.txt

    configdir=configs/$config

    if [ ! -r $configdir ]; then
        echo "Cannot read config directory $configdir" >&2
        exit 1
    fi

    if [ -r $configdir/setup.sh ]; then
        cp -a $configdir/setup.sh ${simdir}
    fi

    # Create submission script

    if [ -r $configdir/submit.sh ]; then
        cp -a $configdir/submit.sh ${simdir}
    fi

    if [ -r simhooks/sim-run ]; then
        cp -a simhooks/sim-run ${simdir}
    fi


    if [ -r $simdir/submit.sh ]; then
        sed -i.bak "s/@CORES@/${cores}/" $simdir/submit.sh
        sed -i.bak "s/@WALLTIME@/${walltime}/" $simdir/submit.sh

        outfile=batchlog.txt
        sed -i.bak "s|@OUTFILE@|${outfile}|" $simdir/submit.sh

        simname=${simdir##*/}
        sed -i.bak "s/@SIMNAME@/${simname}/" $simdir/submit.sh

        rm -f $simdir/submit.sh.bak

        echo >> $simdir/submit.sh
        echo "env >meta/env.txt" >> $simdir/submit.sh
        echo "if [ -r setup.sh ]; then source ./setup.sh; fi" >> $simdir/submit.sh
        echo "exec >log.txt 2>&1" >> $simdir/submit.sh
        echo "./sim-run" >> $simdir/submit.sh
    fi

    # Write simulation properties
    cat >$simdir/meta/properties.sh <<EOF 
CORES=${cores}
WALLTIME=${walltime}
EOF

    if [ -r ${simdir}/setup.sh ]; then
        source ${simdir}/setup.sh
    fi

    # Application-specific simulation creation
    simhooks/sim-create $simdir $input
}

# Create and submit a new simulation, or submit an existing simulation
function sim_submit()
{
    opts=()
    continue_sim=0

    while [ $# -gt 0 ]; do
        if [ $1 = "--continue" ]; then
            continue_sim=1
        elif [[ $1 =~ -.* ]]; then
            opts+=("$1" "$2")
            shift 2
        else
            break
        fi
    done

    simdir=$1

    if [ -r $simdir/log.txt -a ! $continue_sim ]; then
        echo "Simulation $simdir has already been run" >&2
        exit 1
    fi

    # Create the simulation using the provided opts if it does not
    # already exist
    if [ ! -r $simdir ]; then
        if [ ${#opts[@]} = 0 ]; then
            sim_create $simdir
        else
            sim_create "${opts[@]}" $simdir
        fi
    else
        if [ ${#opts[@]} != 0 ]; then
            echo "Cannot pass simulation creation options to sim submit when submitting an existing simulation" >&2
            exit 1
        fi
    fi

    echo "Submitting simulation $simdir"

    cd $simdir
    qsub submit.sh
}

# Continue an existing simulation by resubmitting it in the same
# directory and assuming the code can carry on where it left off
function sim_continue()
{
    simdir=$1

    if [ ! -r $simdir/log.txt ]; then
        echo "Simulation $simdir has not been run; cannot be continued" >&2
        exit 1
    fi

    echo "Continuing simulation $simdir"

    cd $simdir
    qsub submit.sh
}


command=$1
shift

eval "sim_$command ${@}"
